name: Build Ladybird

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for upstream syncing

      - name: Add upstream remote (optional sync)
        run: |
          git remote add upstream https://github.com/LadybirdBrowser/ladybird.git
          git fetch upstream
          # Uncomment below to rebase on upstream/main
          # git rebase upstream/main

      - name: Add Kitware APT repo for CMake >= 3.25
        run: |
          sudo apt update
          sudo apt install -y gnupg software-properties-common
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | \
            gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -sc) main" | \
            sudo tee /etc/apt/sources.list.d/kitware.list

      - name: Add LLVM APT repo for clang-20
        run: |
          sudo wget -O /usr/share/keyrings/llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key
          echo "deb [signed-by=/usr/share/keyrings/llvm-snapshot.gpg.key] https://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-20 main" | \
            sudo tee -a /etc/apt/sources.list.d/llvm.list

      - name: Add Ubuntu Toolchain PPA for gcc-14
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y \
            autoconf autoconf-archive automake build-essential ccache \
            cmake curl fonts-liberation2 git libgl1-mesa-dev nasm ninja-build \
            pkg-config qt6-base-dev qt6-tools-dev-tools qt6-wayland qt6-multimedia-dev \
            libpulse-dev tar unzip zip \
            clang-20 clangd-20 clang-tools-20 clang-format-20 clang-tidy-20 lld-20 \
            g++-14 libstdc++-14-dev

      - name: Set Clang 20 as compiler
        run: |
          echo "CC=clang-20" >> $GITHUB_ENV
          echo "CXX=clang++-20" >> $GITHUB_ENV

      - name: Show compiler versions
        run: |
          cmake --version
          clang-20 --version

      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: Build
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build Ladybird
        run: |
          chmod +x ./Meta/ladybird.py
          ./Meta/ladybird.py build

      - name: Zip the bin folder
        run: |
          cd Build/release
          zip -r ladybird-bin.zip bin

      - name: Upload zipped bin folder
        uses: actions/upload-artifact@v4
        with:
          name: ladybird-bin-zip
          path: Build/release/ladybird-bin.zip

      - name: Upload to GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: Build/release/ladybird-bin.zip
