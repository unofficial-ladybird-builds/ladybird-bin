name: Build Ladybird

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  schedule:
    - cron: '0 */48 * * *'  # Every 48 hours
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: blacksmith-4vcpu-ubuntu-2404

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master

      # --- SYNC STEP (runs before build) ---
      - name: Sync with upstream (preserve .github)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add upstream https://github.com/LadybirdBrowser/ladybird.git
          git fetch upstream master

          # Bring in everything from upstream
          git checkout upstream/master -- .

          # Keep .github folder and README
          git restore --source=HEAD --staged --worktree .github
          git restore --staged --worktree -- README.md

          # Commit sync if needed
          git add -A
          git commit -m "Sync with upstream (before build)" || echo "No changes to commit"
          git push origin master || echo "No changes pushed"

      - name: Add Kitware APT repo for CMake >= 3.25
        run: |
          sudo apt update
          sudo apt install -y gnupg software-properties-common
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | \
            gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -sc) main" | \
            sudo tee /etc/apt/sources.list.d/kitware.list

      - name: Add LLVM APT repo for clang-20
        run: |
          sudo wget -O /usr/share/keyrings/llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key
          echo "deb [signed-by=/usr/share/keyrings/llvm-snapshot.gpg.key] https://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-20 main" | \
            sudo tee /etc/apt/sources.list.d/llvm.list

      - name: Add Ubuntu Toolchain PPA for gcc-14
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y \
            autoconf autoconf-archive automake build-essential ccache \
            cmake curl fonts-liberation2 git libgl1-mesa-dev nasm ninja-build \
            pkg-config qt6-base-dev qt6-tools-dev-tools qt6-wayland qt6-multimedia-dev \
            libpulse-dev tar unzip zip \
            clang-20 clangd-20 clang-tools-20 clang-format-20 clang-tidy-20 lld-20 \
            g++-14 libstdc++-14-dev libdrm-dev

      - name: Set Clang 20 as compiler
        run: |
          echo "CC=clang-20" >> $GITHUB_ENV
          echo "CXX=clang++-20" >> $GITHUB_ENV

      - name: Show compiler versions
        run: |
          cmake --version
          clang-20 --version
          
      - name: Build Ladybird with portable flags
        run: |
          chmod +x ./Meta/ladybird.py
          export BUILD_PRESET=Release
          export CMAKE_C_FLAGS="-O2 -march=x86-64 -mtune=generic -fcf-protection=none -mno-shstk"
          export CMAKE_CXX_FLAGS="-O2 -march=x86-64 -mtune=generic -fcf-protection=none -mno-shstk"
          ./Meta/ladybird.py build




      - name: Ensure Resources exist or add dummy
        run: |
          mkdir -p Resources
          if [ ! -f Resources/home-page.html ]; then
            echo "<html><body><h1>Hello, Ladybird</h1></body></html>" > Resources/home-page.html
          fi
          mkdir -p Build/release/bin/resources
          cp Resources/* Build/release/bin/resources/

      - name: Copy shared libraries to bin
        run: |
          find Build/release -name "*.so*" -exec cp {} Build/release/bin/ \;

      - name: Zip full repo (source + build) for upload
        run: |
          cd $GITHUB_WORKSPACE
          zip -r ladybird-full-repo.zip .

      - name: Upload full repo artifact
        uses: actions/upload-artifact@v4
        with:
          name: ladybird-full-repo
          path: ladybird-full-repo.zip

      - name: Upload to GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ladybird-full-repo.zip
